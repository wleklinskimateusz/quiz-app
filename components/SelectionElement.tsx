import { twMerge } from "tailwind-merge";

type SelectionProps = {
  id: string;
  option: "A" | "B" | "C" | "D";
  answer?: "A" | "B" | "C" | "D";
  isCorrectOption?: boolean;
  text: string;
};

export const SelectionElement = ({
  id,
  text,
  answer,
  option,
  isCorrectOption: correct,
}: SelectionProps) => {
  const notSubmitted = !answer;
  const wrong = !correct;
  const isChosen = answer === option;
  return (
    <div className="w-full sm:w-[616px]">
      <input
        type="radio"
        value={option}
        className="hidden"
        id={id}
        name="question"
        required
        disabled={Boolean(answer)}
      />
      <label
        htmlFor={id}
        className={twMerge(
          "group flex items-center gap-8 rounded-3xl bg-white px-5 py-[1.125rem] text-[14px] text-headingS font-normal  shadow dark:bg-navy",
          "radio-check:ring-[3px]",

          notSubmitted && "ring-purple",
          correct && isChosen && "ring-[3px] ring-green",
          wrong && isChosen && "ring-[3px] ring-red",
        )}
      >
        <div
          className={twMerge(
            "flex h-14 w-14 items-center justify-center rounded-lg ",
            "alpha",
            "bg-light-gray text-navy-gray group-hover:bg-[#F6E7FF] group-hover:text-purple",
            "radio-check:text-white",
            notSubmitted && "radio-check:bg-purple",
            answer && correct && "radio-check:bg-green",
            answer && wrong && "radio-check:bg-red",
          )}
        >
          {option}
        </div>
        <span className="flex-grow">{text}</span>
        <div className={twMerge(correct ? "text-green" : "text-red")}>
          {answer && correct && <Correct />}
          {answer && !correct && (
            <Wrong className={!isChosen ? "opacity-0" : undefined} />
          )}
          {!answer && <Wrong className="opacity-0" />}
        </div>
      </label>
    </div>
  );
};

const Correct = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="40"
    height="40"
    viewBox="0 0 40 40"
    fill="none"
  >
    <path
      d="M20 5C21.9698 5 23.9204 5.38799 25.7403 6.14181C27.5601 6.89563 29.2137 8.00052 30.6066 9.3934C31.9995 10.7863 33.1044 12.4399 33.8582 14.2597C34.612 16.0796 35 18.0302 35 20C35 21.9698 34.612 23.9204 33.8582 25.7403C33.1044 27.5601 31.9995 29.2137 30.6066 30.6066C29.2137 31.9995 27.5601 33.1044 25.7403 33.8582C23.9204 34.612 21.9698 35 20 35C16.0218 35 12.2064 33.4196 9.3934 30.6066C6.58035 27.7936 5 23.9782 5 20C5 16.0218 6.58035 12.2064 9.3934 9.3934C12.2064 6.58035 16.0218 5 20 5ZM20 7.5C16.6848 7.5 13.5054 8.81696 11.1612 11.1612C8.81696 13.5054 7.5 16.6848 7.5 20C7.5 23.3152 8.81696 26.4946 11.1612 28.8388C13.5054 31.183 16.6848 32.5 20 32.5C23.3152 32.5 26.4946 31.183 28.8388 28.8388C31.183 26.4946 32.5 23.3152 32.5 20C32.5 16.6848 31.183 13.5054 28.8388 11.1612C26.4946 8.81696 23.3152 7.5 20 7.5ZM18.125 22.605L25.3 15.41C25.5201 15.1877 25.8155 15.0559 26.1279 15.0408C26.4404 15.0257 26.7471 15.1282 26.9876 15.3282C27.2282 15.5283 27.3849 15.8112 27.427 16.1211C27.4691 16.4311 27.3935 16.7456 27.215 17.0025L27.07 17.1775L19.01 25.2575C18.8035 25.465 18.5307 25.5933 18.2392 25.6203C17.9478 25.6473 17.6561 25.5711 17.415 25.405L17.24 25.26L12.865 20.885C12.6435 20.6645 12.5127 20.3691 12.4982 20.0569C12.4838 19.7448 12.5868 19.4385 12.7869 19.1985C12.9871 18.9586 13.2699 18.8022 13.5795 18.7604C13.8892 18.7186 14.2033 18.7942 14.46 18.9725L14.635 19.115L18.125 22.605Z"
      fill="currentColor"
    />
  </svg>
);

const Wrong = ({ className }: { className?: string }) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="40"
    height="40"
    viewBox="0 0 40 40"
    fill="none"
    className={className}
  >
    <path
      d="M20 5C21.9698 5 23.9204 5.38799 25.7403 6.14181C27.5601 6.89563 29.2137 8.00052 30.6066 9.3934C31.9995 10.7863 33.1044 12.4399 33.8582 14.2597C34.612 16.0796 35 18.0302 35 20C35 21.9698 34.612 23.9204 33.8582 25.7403C33.1044 27.5601 31.9995 29.2137 30.6066 30.6066C29.2137 31.9995 27.5601 33.1044 25.7403 33.8582C23.9204 34.612 21.9698 35 20 35C16.0218 35 12.2064 33.4196 9.3934 30.6066C6.58035 27.7936 5 23.9782 5 20C5 16.0218 6.58035 12.2064 9.3934 9.3934C12.2064 6.58035 16.0218 5 20 5ZM20 7.5C16.6848 7.5 13.5054 8.81696 11.1612 11.1612C8.81696 13.5054 7.5 16.6848 7.5 20C7.5 23.3152 8.81696 26.4946 11.1612 28.8388C13.5054 31.183 16.6848 32.5 20 32.5C23.3152 32.5 26.4946 31.183 28.8388 28.8388C31.183 26.4946 32.5 23.3152 32.5 20C32.5 16.6848 31.183 13.5054 28.8388 11.1612C26.4946 8.81696 23.3152 7.5 20 7.5ZM14.5975 14.915L14.74 14.74C14.9471 14.5333 15.2202 14.4058 15.5117 14.3798C15.8031 14.3538 16.0945 14.4308 16.335 14.5975L16.51 14.74L20 18.2325L23.49 14.74C23.6971 14.5333 23.9702 14.4058 24.2617 14.3798C24.5531 14.3538 24.8445 14.4308 25.085 14.5975L25.26 14.74C25.4667 14.9471 25.5942 15.2202 25.6202 15.5117C25.6462 15.8031 25.5692 16.0945 25.4025 16.335L25.26 16.51L21.7675 20L25.26 23.49C25.4667 23.6971 25.5942 23.9702 25.6202 24.2617C25.6462 24.5531 25.5692 24.8445 25.4025 25.085L25.26 25.26C25.0529 25.4667 24.7798 25.5942 24.4883 25.6202C24.1969 25.6462 23.9055 25.5692 23.665 25.4025L23.49 25.26L20 21.7675L16.51 25.26C16.3029 25.4667 16.0298 25.5942 15.7383 25.6202C15.4469 25.6462 15.1555 25.5692 14.915 25.4025L14.74 25.26C14.5333 25.0529 14.4058 24.7798 14.3798 24.4883C14.3538 24.1969 14.4308 23.9055 14.5975 23.665L14.74 23.49L18.2325 20L14.74 16.51C14.5333 16.3029 14.4058 16.0298 14.3798 15.7383C14.3538 15.4469 14.4308 15.1555 14.5975 14.915Z"
      fill="currentColor"
    />
  </svg>
);
